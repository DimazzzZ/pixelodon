// Mocks generated by Mockito 5.4.4 from annotations
// in pixelodon/test/services/deep_link_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:app_links/src/app_links.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AppLinks].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppLinks extends _i1.Mock implements _i2.AppLinks {
  MockAppLinks() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<String> get stringLinkStream => (super.noSuchMethod(
        Invocation.getter(#stringLinkStream),
        returnValue: _i3.Stream<String>.empty(),
      ) as _i3.Stream<String>);

  @override
  _i3.Stream<Uri> get uriLinkStream => (super.noSuchMethod(
        Invocation.getter(#uriLinkStream),
        returnValue: _i3.Stream<Uri>.empty(),
      ) as _i3.Stream<Uri>);

  @override
  _i3.Future<Uri?> getInitialLink() => (super.noSuchMethod(
        Invocation.method(
          #getInitialLink,
          [],
        ),
        returnValue: _i3.Future<Uri?>.value(),
      ) as _i3.Future<Uri?>);

  @override
  _i3.Future<String?> getInitialLinkString() => (super.noSuchMethod(
        Invocation.method(
          #getInitialLinkString,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<Uri?> getLatestLink() => (super.noSuchMethod(
        Invocation.method(
          #getLatestLink,
          [],
        ),
        returnValue: _i3.Future<Uri?>.value(),
      ) as _i3.Future<Uri?>);

  @override
  _i3.Future<String?> getLatestLinkString() => (super.noSuchMethod(
        Invocation.method(
          #getLatestLinkString,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);
}
